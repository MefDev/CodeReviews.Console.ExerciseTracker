// <auto-generated />
using System;
using ExerciseTracker.Mefdev.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExerciseTracker.Mefdev.Migrations
{
    [DbContext(typeof(ExerciseContext))]
    [Migration("20241129202825_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExerciseTracker.Mefdev.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "Morning workout: Running and stretching.",
                            DateEnd = new DateTime(2024, 11, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 11, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Type = "Cardio"
                        },
                        new
                        {
                            Id = 2,
                            Comments = "Strength training: Upper body workout.",
                            DateEnd = new DateTime(2024, 11, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 11, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Type = "Strength"
                        },
                        new
                        {
                            Id = 3,
                            Comments = "Yoga and stretching session.",
                            DateEnd = new DateTime(2024, 11, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 11, 3, 7, 30, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Type = "Flexibility"
                        },
                        new
                        {
                            Id = 4,
                            Comments = "Cycling and cardio exercises.",
                            DateEnd = new DateTime(2024, 11, 4, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2024, 11, 4, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            Type = "Cardio"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
